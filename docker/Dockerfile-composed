# Docker file that contains all the necessary services to run the app 
# EXCEPT the database. The database is run in a separate container.

# Services: web, worker (queue), redis
# Excluded: db (postgres)

FROM --platform=linux/amd64 node:20-slim AS base

ARG DATABASE_URL="postgresql://local@host.docker.internal:5432/mixan?schema=public"
ENV DATABASE_URL=$DATABASE_URL

ARG NEXTAUTH_SECRET="secret_sauce"
ENV NEXTAUTH_SECRET=$NEXTAUTH_SECRET

ARG REDIS_URL="redis://127.0.0.1:6379"
ENV REDIS_URL=$REDIS_URL

ENV PNPM_HOME="/pnpm"

ENV PATH="$PNPM_HOME:$PATH"

RUN corepack enable

ARG NODE_VERSION=20

RUN apt update \
    && apt install -y curl supervisor redis \
    && curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n \
    && bash n $NODE_VERSION \
    && rm n \
    && npm install -g n

WORKDIR /app

COPY package.json package.json
COPY pnpm-lock.yaml pnpm-lock.yaml
COPY pnpm-workspace.yaml pnpm-workspace.yaml
COPY apps/web/package.json apps/web/package.json
COPY apps/worker/package.json apps/worker/package.json
COPY packages/db/package.json packages/db/package.json
COPY packages/queue/package.json packages/queue/package.json
COPY packages/common/package.json packages/common/package.json
COPY packages/types/package.json packages/types/package.json

# BUILD
FROM base AS build

WORKDIR /app/apps/web
RUN pnpm install --frozen-lockfile --ignore-scripts

WORKDIR /app/apps/worker
RUN pnpm install --frozen-lockfile --ignore-scripts

WORKDIR  /app
COPY apps apps
COPY packages packages
COPY tooling tooling
RUN pnpm db:codegen

WORKDIR /app/apps/web
RUN pnpm run build

WORKDIR /app/apps/worker
RUN pnpm run build

# PROD
FROM base AS prod

WORKDIR /app
RUN pnpm install --frozen-lockfile --prod --ignore-scripts

# FINAL
FROM base AS runner

COPY --from=build /app/package.json /app/package.json
COPY --from=prod /app/node_modules /app/node_modules
# Apps
COPY --from=build /app/apps/web /app/apps/web
COPY --from=build /app/apps/worker /app/apps/worker
# Apps node_modules
COPY --from=prod /app/apps/web/node_modules /app/apps/web/node_modules
COPY --from=prod /app/apps/worker/node_modules /app/apps/worker/node_modules
# Packages
COPY --from=build /app/packages/db /app/packages/db
COPY --from=build /app/packages/queue /app/packages/queue
# Packages node_modules
COPY --from=prod /app/packages/db/node_modules /app/packages/db/node_modules
COPY --from=prod /app/packages/queue/node_modules /app/packages/queue/node_modules

RUN pnpm db:codegen

RUN mkdir -p /var/log/supervisor /data
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/redis.conf /etc/redis/redis.conf

# Redis data
VOLUME [ "/data" ] 

EXPOSE 3000 3001

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]